# Fix for missing modules in Python 3.11+
import sys
import os

# –°–æ–∑–¥–∞–µ–º fake –º–æ–¥—É–ª–∏ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–∞
missing_modules = ['imghdr', 'urllib3']
for module_name in missing_modules:
    if module_name not in sys.modules:
        try:
            from types import ModuleType
            fake_module = ModuleType(module_name)
            
            if module_name == 'imghdr':
                fake_module.what = lambda *args, **kwargs: None
            
            sys.modules[module_name] = fake_module
            print(f"‚úÖ Created fake module: {module_name}")
        except Exception as e:
            print(f"‚ö†Ô∏è Failed to create {module_name}: {e}")

# –¢–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
try:
    import logging
    from telegram import Update
    from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
    print("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("üëâ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: pip install -r requirements.txt")
    sys.exit(1)

# ================== –ù–ê–°–¢–†–û–ô–ö–ò ==================
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', '8243656189:AAHALtgbtUCFYBjc1n3THIsxnFGrqFvDO4k')

# ================== –õ–û–ì–ò–†–û–í–ê–ù–ò–ï ==================
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    handlers=[logging.StreamHandler(sys.stdout)]
)
logger = logging.getLogger(__name__)

# ================== –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô ==================
def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫"""
    required_modules = [
        'telegram', 'telegram.ext', 'logging', 'os', 'sys'
    ]
    
    for module in required_modules:
        try:
            __import__(module)
            print(f"‚úÖ {module} - OK")
        except ImportError:
            print(f"‚ùå {module} - MISSING")
            return False
    return True

# ================== –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê ==================
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        user = update.effective_user
        welcome_text = (
            f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n"
            "–Ø —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞—é –Ω–∞ Render.com!\n\n"
            "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã\n"
            "üêç Python 3.10+\n"
            "üìö python-telegram-bot v20.x\n\n"
            "–ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!"
        )
        await update.message.reply_text(welcome_text)
        logger.info(f"User {user.id} started the bot")
    except Exception as e:
        logger.error(f"Error in start_command: {e}")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "ü§ñ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "/help - –ü–æ–º–æ—â—å\n"
        "/status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n\n"
        "üí¨ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!"
    )
    await update.message.reply_text(help_text, parse_mode='Markdown')

async def status_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status"""
    status_text = (
        "üü¢ *–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:*\n"
        "‚Ä¢ –•–æ—Å—Ç–∏–Ω–≥: Render.com\n"
        "‚Ä¢ Python: 3.10+\n"
        "‚Ä¢ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏: ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã\n"
        "‚Ä¢ –°–æ—Å—Ç–æ—è–Ω–∏–µ: –†–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
    )
    await update.message.reply_text(status_text, parse_mode='Markdown')

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_message = update.message.text
    response = f"üîÅ –í—ã —Å–∫–∞–∑–∞–ª–∏: _{user_message}_"
    await update.message.reply_text(response, parse_mode='Markdown')

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"Error: {context.error}")

# ================== –ó–ê–ü–£–°–ö –ë–û–¢–ê ==================
def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    print("=" * 60)
    print("ü§ñ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô –ë–û–¢–ê")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not check_dependencies():
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏!")
        print("üëâ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: pip install -r requirements.txt")
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    if not TOKEN or 'AAHALtgbtUCFYBjc1n3THIsxnFGrqFvDO4k' in TOKEN:
        print("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("üëâ –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –≤ Render")
        return
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        
        application = Application.builder().token(TOKEN).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        handlers = [
            CommandHandler("start", start_command),
            CommandHandler("help", help_command),
            CommandHandler("status", status_command),
            MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message)
        ]
        
        for handler in handlers:
            application.add_handler(handler)
        
        application.add_error_handler(error_handler)
        
        print("=" * 60)
        print("‚úÖ –ë–û–¢ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù!")
        print(f"üìç –¢–æ–∫–µ–Ω: {TOKEN[:10]}...")
        print("üåê –•–æ—Å—Ç–∏–Ω–≥: Render.com")
        print("=" * 60)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling()
        
    except Exception as e:
        print(f"üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        logger.critical(f"Critical error: {e}")

if __name__ == '__main__':
    main()
